frequency = 0.8
t = 1/frequency
function init(self)
	print(msg.url())
	msg.post(".", "acquire_input_focus")
	self.vel = vmath.vector3()
	self.health = 100
end

function update(self, dt)
	local pos = go.get_position()
	pos = pos + self.vel * dt 
	go.set_position(pos)

	self.vel.x = 0
	self.vel.y = 0
	self.correction = vmath.vector3()

	if self.health <= 0 then
		msg.post("@system:", "exit", {code = 0})
	end
end

function on_input(self, action_id, action)
	if action_id == hash("pause") and action.released == true then
		msg.post("main:/controller#main_controller", "pause")
		print("pause")
	end
	if action_id == hash("up") then
		self.vel.y = 200
		print("up")
	elseif action_id == hash("down") then
		self.vel.y = -200
	elseif action_id == hash("left") then
		self.vel.x = -200
	elseif action_id == hash("right") then
		self.vel.x = 200
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") and message.group == hash("wall") then
		go.set_position(go.get_position() + message.normal * message.distance)
	elseif message_id == hash("contact_point_response") and message.group == hash("melee") then
		go.set_position(go.get_position() + message.normal * message.distance)
	elseif message_id == hash("damage") then
		self.health = self.health - message.damage
		print(self.health)
		damage(self)
	end
end

function damage(self)
	msg.post("main:/ui#ui", "damage", {health=self.health})
end